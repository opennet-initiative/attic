#!/bin/sh
# if called from /etc/init.d/S15opennet-init, directly after an installation of RC6ON*, behave a little different
if [ "$1" = "firstboot" ]; then
	logit="logger -t S15opennet-init"
else
	logit="echo"
fi

# helper functions

startswith() { local str="$1"; local substr="$2";
	[ -n "$str" -a -z "${str##$substr*}" ] && echo 1 || echo 0; }

endswith() { local str="$1"; local substr="$2";
	[ -n "$str" -a -z "${str##*$substr}" ] && echo 1 || echo 0; }

##
## opennet-firmware postinst script
##

$logit "  updating nvram variables to opennet defaults.."

if [ -z $(nvram show 2>/dev/null | grep wl0_on_init_override) ] ; then
	# german channel setup
	nvram set wl0_country_code=DE
	# enable ad hoc
	nvram set wl0_mode=sta
	nvram set wl0_infra=0
	# disable wep (not really needed)
	nvram set wl0_wep=off
	# disable wpa (not really needed)
	nvram unset wl_wpa_psk
	nvram unset wl_wpa_gtk_rekey
	nvram unset wl0_wpa_gtk_rekey
	nvram unset wl0_wpa_psk
	nvram unset wl0_akm
	# disable wds
	nvram unset wl0_lazywds
	nvram unset wl0_wds
	# set b/g mode
	nvram set wl0_gmode=1 
	nvram set wl0_gmode_protection=auto
	$logit "  - set default: wifi mode => DE, ad-hoc, no wep/wpa/wds, b/g mode"

	# set ssid (if not yet like *.opennet-initiative.de)
	ssid=$(nvram get wl0_ssid)
	if [ -z "$ssid" ] || [ $(endswith "$ssid" "opennet-initiative.de") = 0 ]; then
		nvram set wl0_ssid=olsr.opennet-initiative.de
		nvram set wl0_channel=1
		$logit "  - changed ssid => olsr.opennet-initiative.de, channel 1"
		nvram unset ff_bssid  # set default later...
	fi	

	# set bssid (if not set yet)
	bssid=$(nvram get ff_bssid)
	if [ -z "$bssid" ]; then
		nvram set ff_bssid="02:ca:ff:ee:ba:be"
		$logit "  - changed bssid => 02:ca:ff:ee:ba:be"
	fi

	# misc wifi params
	nvram set wl0_frag=512
	nvram set wl0_rts=250
fi

# configure lan interface (if not down yet like 172.16.0.x or 192.168.2.x)
lanip=$(nvram get lan_ipaddr)
if [ -z "$lanip" ] || (( [ $(startswith "$lanip" "172.16.0") = 0 ] && [ $(startswith "$lanip" "192.168.2.0") = 0 ] )); then
	nvram set lan_ipaddr=172.16.0.1
	nvram set lan_netmask=255.255.255.0
	nvram set lan_proto=static
	$logit "  - changed lan interface => ip 172.16.0.1, mask 255.255.255.0"
fi

# remove preset gateway (now handled by olsrd)
if [ -n "$(nvram get lan_gateway)" ]; then
	nvram unset lan_gateway
	$logit "  - changed lan gateway => removed"
fi

WIFIDEV="$(awk '$1 ~ ":$" {gsub(":",""); print $1; exit} ' /proc/net/wireless)"
if [ -z $(nvram get wifi_ifname) ]; then
	nvram set wifi_ipaddr=192.168.33.127
	nvram set wifi_netmask=255.255.0.0
	nvram set wifi_proto=static
	nvram set wifi_ifname=$WIFIDEV
	$logit "  - changed wifi interface => ip 192.168.33.127, mask 255.255.0.0"
fi

if [ -z $(nvram get wl0_ifname) ]; then
        nvram set wl0_ifname=$WIFIDEV
fi

# remove wifi device from list of bridged devices
ifnames=
for if in $(nvram get lan_ifnames); do
	if [ "$if" != "$WIFIDEV" ]; then
		ifnames="$ifnames $if"
	fi
done
ifnames=$(echo $ifnames)
nvram set lan_ifnames="$ifnames"

# especially on asus dhcp_start is by default not set to an integer value, so fix this
nvram set dhcp_start=100
nvram set dhcp_num=50
$logit "  - set default: dhcp => activated"

# activate automatic olsrd configuration
if [ -z "$(nvram show 2>/dev/null | grep on_remoteconf)" ]; then
	nvram set on_remoteconf="on"
	$logit "  - changed remoteconf => on \(used for olsr configuration\)"
fi

# limit txpwr, assume always a external Antenna
on_ant_dbi=$(nvram get on_ant_dbi)
ff_txpwr=$(nvram get ff_txpwr)
if [ -z "$on_ant_dbi" ]; then
	nvram set on_ant_dbi=8
	$logit "  - changed antenna dbi => 15 mW"
fi
if [ -z "$ff_txpwr" ]; then
	nvram set ff_txpwr=15
	$logit "  - changed wifi txpwr => 15 mW"
fi

# activate automatic optimization of txpwr by default if not deactivated
if [ -z "$(nvram show 2>/dev/null | grep on_autoadapttxpwr)" ]; then
	nvram set on_autoadapttxpwr=on
	$logit "  - changed wifi optimization => auto-adapt txpwr"
fi

# if the list of possible gateways is empty switch auto-search on
if [ -z "$(nvram show 2>/dev/null | grep on_gwaddrs)" ]; then
	on_gwauto=$(nvram get on_gwauto)
	if [ -z "$on_gwauto" ] || [ "$on_gwauto" != "on" ]; then 
		nvram set on_gwauto=on
		$logit "  - changed gateway selection => auto-search mode"
	fi
fi

# activate automatic selection of DNS-Servers by default
if [ -z "$(nvram show 2>/dev/null | grep on_autodns)" ]; then
	nvram set on_autodns=on
	$logit "  - changed dns server detection => auto-search mode"
fi

# set user-gateway default (need more work later!)
on_ugw=$(nvram get on_ugw)
if [ -z "$on_ugw" ]; then
	nvram set on_ugw="nagare.on-i.de"
	$logit "  - changed user-gateway => nagare.on-i.de"
fi

# always set boot_wait
nvram set boot_wait=on

# set wan_device to former wan_ifname or pppoe_ifname
if [ -z "$(nvram get wan_device)" ]; then
	wan_ifname="$(nvram get wan_ifname)"
	if [ "$wan_ifname" != "ppp0" ]; then
		nvram set wan_device="$wan_ifname";
	else
		nvram set wan_device="$(nvram get pppoe_ifname)";
	fi;
fi

# change ppp-options so peer-connection is continously checked
if [ -z "$(grep lcp-echo-interval /etc/ppp/options)" ]; then
	# copy file, to support pre rc6-versions
	if [ -L /etc/ppp/options ]; then cp -f /rom/etc/ppp/options /etc/ppp/options; fi
	echo "lcp-echo-interval 3" >>/etc/ppp/options;
	$logit "  - changed ppp-options => lcp-echo-interval 3"
fi
if [ -z "$(grep lcp-echo-failure /etc/ppp/options)" ]; then
	# copy file, to support pre rc6-versions
	if [ -L /etc/ppp/options ]; then cp -f /rom/etc/ppp/options /etc/ppp/options; fi
	echo "lcp-echo-failure 5" >>/etc/ppp/options;
	$logit "  - changed ppp-options => lcp-echo-failure 5"
fi

# set firmware-version to nvram variables
_version=$( grep "(" /etc/banner )
_version="${_version%% ---*}"
nvram set on_fw_version="$(echo $_version)"
if [ "$1" = "firstboot" ]; then
	on_fw_pkgversion="$(ipkg info opennet-firmware | awk '$1 == "Version:" {print $2}')"
else	
	on_fw_pkgversion="$(cat /usr/lib/ipkg/info/opennet-firmware.control | awk '$1 == "Version:" {print $2}')"
fi
nvram set on_fw_pkgversion=$on_fw_pkgversion

### switch from openwrt to opennet-specific ############################
version_line=" ------- with opennet-firmware "$on_fw_pkgversion" "
while [ ${#version_line} -lt 52 ]; do version_line="$version_line-"; done
rm -f /etc/banner; cp /rom/etc/banner /etc/banner; 
echo "$version_line " >>/etc/banner
echo " --------------------------------------------------- " >>/etc/banner

### add Opennet-Interface to openwrt-Webinterface ######################
awk '!/Opennet-Interface/ {print}' /www/cgi-bin/webif/.categories >/www/cgi-bin/webif/.categories_bak
rm /www/cgi-bin/webif/.categories
cp /www/cgi-bin/webif/.categories_bak /www/cgi-bin/webif/.categories

echo "##WEBIF:category:Opennet-Interface" >>/www/cgi-bin/webif/.categories



if [ "$1" != "firstboot" ]; then
###############################################################################
###############################################################################
###bugfixes/adaptions (not relevant for complete release) 

# openvpn-path changed after 0.10ipkg-1, so move the files
if [ -e /etc/openvpn/on_aps.key ]; then mv -f /etc/openvpn/on_aps.key /etc/openvpn/opennet_user/; fi
if [ -e /etc/openvpn/on_aps.crt ]; then	mv -f /etc/openvpn/on_aps.crt /etc/openvpn/opennet_user/; fi
if [ -e /etc/openvpn/on_aps.csr ]; then mv -f /etc/openvpn/on_aps.csr /etc/openvpn/opennet_user/; fi

# some filenames changed after release-0.11ipkg-3
rm -f /usr/sbin/check_nagare.sh		# now /usr/sbin/check_usergateway.sh
rm -f /www/cgi-bin/18-localaccess	# now /www/cgi-bin/18-wifidhcp
rm -f /www/cgi-bin/on_localaccess.html  # now /www/cgi-bin/on_wifidhcp
rm -f /etc/init.d/S82wifiaccess		# now /etc/init.d/S82wifidhcp

# renamed var on_sharedsl into on_share_internet since release-0.11ipkg-3
if [ -z "$(nvram get on_share_internet)" ]; then
	nvram set on_share_internet=$(nvram get on_sharedsl)
fi

# renamed var on_wifiaccess_route_override since release-0.11ipkg-3
if [ -n "$(nvram get on_wifiaccess_route_override)" ]; then
	nvram set on_wifidhcp_route_override=$(nvram get on_wifiaccess_route_override)
fi

# pre release-0.11ipkg-5 might result in broken firmware-update interface
if [ -e /www/cgi-bin/webif/upgrade.sh_on ]; then
	cd /www/cgi-bin/webif/
	upgrade_sh_on_md5=$(md5sum upgrade.sh_on 2>/dev/null| cut -d" " -f1)
	if [ -e upgrade.sh_bak ] && [ "$upgrade_sh_on_md5" = "$(md5sum upgrade.sh_bak|cut -d" " -f1)" ]; then
			$logit "  - repairing broken (but hidden) firmware-update interface"
			ln -sf /rom/www/cgi-bin/webif/upgrade.sh upgrade.sh_bak
	elif [ -e upgrade.sh ] && [ "$upgrade_sh_on_md5" = "$(md5sum upgrade.sh|cut -d" " -f1)" ]; then
			$logit "  - repairing broken firmware-update interface"
			ln -sf /rom/www/cgi-bin/webif/upgrade.sh .
	fi
fi

# pre release 0.11ipkg-10 delivered /debian-binary - and shouldnt
rm -rf /debian-binary

### end bugfixes/adaptions (not relevant for complete release) 
###############################################################################
###############################################################################
fi


###############################################################################
###############################################################################
### bugfixes/adaptions (overall relevance) 

# obsolete vars since release-0.11ipkg-3
nvram unset on_wldhcp_num
nvram unset on_wldhcp
nvram unset on_wldhcp_start
nvram unset on_wldhcp_lease
nvram unset dhcpwl_proto
nvram unset dhcpwl_ipaddr
nvram unset dhcpwl_ifname
nvram unset dhcpwl_netmask
nvram unset on_wifi_access
nvram unset on_sharedsl
nvram unset on_sharedsl_blocked
nvram unset on_wifiaccess_route_override

# portforwarding variables changed and unified in 0.11ipkg-10, transfer former variables
if [ -n "$(nvram show 2>/dev/null | grep on_map)" ]; then
	base_addr=$((10000+10*($(nvram get wifi_ipaddr | cut -d'.' -f4)-1)))

	mapall2one=$(nvram get on_mapall2one); mapall2one_addr=$(nvram get on_mapaddr0)
	portmap_newlist=
	for n in 0 1 2 3 4 5 6 7 8 9; do
		if [ "$mapall2one" = "on" ]; then destaddr=$mapall2one_addr;
		else destaddr=$(nvram get on_mapaddr$n); fi
		nvram unset on_mapaddr$n;
		[ -n "$destaddr" ] && portmap_newlist="$portmap_newlist $(($base_addr+$n))>$destaddr"
	done
	portmap_newlist=$(echo $portmap_newlist); nvram set on_vpnmap="$portmap_newlist"
	nvram unset on_mapall2one
fi
if [ -n "$(nvram get on_intrlmap)" ]; then
	nvram set on_wifimap=$(nvram get on_intrlmap); nvram unset on_intrlmap; nvram unset 
fi

# change /etc/init.d/S05nvram to enable dhcp
# see http://wiki.openwrt.org/OpenWrtDocs/Configuration
awk '{ 	if ( /linksys bug/ && /lan_proto/ && /dhcp/ && !/#~/  ) {
		comment = 1; print "### commented out following lines by opennet-firmware ####"
	}
	if ($0 == "" && comment == 1) {
		comment = 0; print "### commented out previous lines by opennet-firmware ####"
	}
	if (comment == 1) print "#~ "$0;
	else print $0
	}' /etc/init.d/S05nvram >/tmp/S05nvram
cp -f /tmp/S05nvram S05nvram


### end bugfixes/adaptions (overall relevance) 
###############################################################################
###############################################################################

nvram commit
