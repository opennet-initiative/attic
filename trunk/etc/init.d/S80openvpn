#!/bin/sh -e

test -n "$FAILSAFE" && exit

DAEMON=/usr/sbin/openvpn
CONFIG_DIR=/etc/openvpn
test -x $DAEMON || exit 0
test -d $CONFIG_DIR || exit 0
test -d /var/run || mkdir -p /var/run

DEBUG="false"
if [ -n "$(nvram get on_fw_debug)" ]; then DEBUG=$(nvram get on_fw_debug); fi
if [ -z "$(lsmod | grep ipt_LOG)" ]; then DEBUG="false"; fi

# one parameter, IP of usergateway
add_fw_rules() {
	iptables -I OUTPUT 1 -p udp --dport 1602 -o ! $WANDEV -d $1 -j DROP
	$DEBUG && iptables -I OUTPUT 1 -p udp --dport 1602 -o ! $WANDEV -d $1 -j LOG --log-prefix "${NAME##opennet_} wrong iface:"
	echo $1 > /var/run/openvpn.$NAME.remote_ip
}

del_fw_rules() {
	if [ -e /var/run/openvpn.$NAME.remote_ip ]; then
		remote_ip="$(cat /var/run/openvpn.$NAME.remote_ip)"
		get_rulenum() {
			iptables -L OUTPUT --line-numbers -n -v | awk '$5 == "udp" && $8 == "!'"$WANDEV"'" && $10 == "'"$remote_ip"'" && $12 == "dpt:1602" {print $1; exit}'
		}
		while $(iptables -D OUTPUT $(get_rulenum $1 $2) 2>/dev/null); do : ; done
		rm -f /var/run/openvpn.$NAME.remote_ip
	fi
}

start_vpn () {
	case "$NAME" in
	"opennet_user")
		on_gw="$(nvram get on_gw)"
		if [ -z "$on_gw" ]; then
			echo -n " gateway not defined yet FAILED->" # wait till a gateway is found (should be done by cron.minutely)
		else
			$DAEMON --daemon --writepid /var/run/openvpn.$NAME.pid \
				--remote $on_gw 1600 \
				--config $CONFIG_DIR/$NAME.conf \
				--cd $CONFIG_DIR || echo -n " FAILED->"
		fi
	;;
	"opennet_ugw1"|"opennet_ugw2")
                on_ugw="$(nvram get on_ugws | cut -d" " -f${NAME##opennet_ugw})"
                on_ugw_ip=$(nslookup $on_ugw 2>/dev/null | tail -n 1 | awk '{ print $2 }')
                if [ -z "$WANDEV" ]; then
                        echo -n " (WAN device not available - usergateway not available) FAILED->"
                elif [ "$(nvram get on_share_internet)" != "on" ]; then
                        echo -n " (opennet_usergateway not activated) FAILED->"
                elif [ -z "$on_ugw" ]; then
                        echo -n " (usergateway not defined yet) FAILED->"
                elif [ -z "$on_ugw_ip" ]; then
                        echo -n " (can't get IP of usergateway $on_ugw) FAILED->"
                else
                        # forbid usergateway-tunnel to use other than WAN device
                        del_fw_rules
                        add_fw_rules $on_ugw_ip
                        $DAEMON --daemon --writepid /var/run/openvpn.$NAME.pid \
                                --remote $on_ugw 1602 \
                                --config $CONFIG_DIR/$NAME.conf \
                                --cd $CONFIG_DIR || (del_fw_rules && echo -n " FAILED->")
                fi
	;;
	esac
	echo -n " $NAME"
}

stop_vpn () {
	del_fw_rules
	kill `cat $PIDFILE` || true
	rm $PIDFILE
}

WANDEV=$(nvram get wan_ifname)

case "$1" in
start)
	echo -n "Starting openvpn:"
	configs="$(cd $CONFIG_DIR; ls $2*.conf 2> /dev/null)"
	if [ -z "$configs" ]; then
		echo " No such VPN: $2."; exit 1
	fi
	for CONFIG in $configs; do
		NAME=${CONFIG%%.conf}
		if test -e /var/run/openvpn.$NAME.pid ; then
			echo -n " ($NAME is still running)"
		else
			start_vpn
		fi
	done
	echo "."
;;
stop)
	echo -n "Stopping openvpn:"
	pidfiles="$(ls /var/run/openvpn.$2*.pid 2> /dev/null)"
	if [ -z "$pidfiles" ]; then
		echo " No such VPN: $2."; exit 1
	fi
	for PIDFILE in $pidfiles; do
		NAME=`echo $PIDFILE | cut -c18-`
		NAME=${NAME%%.pid}
		stop_vpn
		echo -n " $NAME"
	done
	echo "."
;;
restart)
	$0 stop $2
	sleep 1
	$0 start $2
	;;
*)
	echo "Usage: $0 {start|stop|restart}" >&2
	exit 1
	;;
esac

exit 0
