#!/bin/sh

test -n "$FAILSAFE" && exit

DEBUG="false"	# Dump dropped packets to klog, show with "dmesg -c"
if [ -n "$(nvram get on_fw_debug)" ]; then DEBUG=$(nvram get on_fw_debug); fi
if [ -z "$(lsmod | grep ipt_LOG)" ]; then DEBUG="false"; fi

# takes one argument: 'create' or ('remove' or anything else - doesn't actually matter)
mac_access() {
        mac_addrs=$(nvram get on_wifi_access)
	if [ $1 = "create" ]; then
		ACT_INSERT="I"; rulenum="2"
	else
		ACT_INSERT="D"; rulenum=""
	fi

	# frames vom wifi/dhcp zum tunnel
	iptables -$ACT_INSERT FORWARD $rulenum -i $WIFIDEV -o $TUNDEV -s $DHCPWIFINET/$DHCPWIFIPRE -d ! $WIFINET/$WIFIPRE -j DROP
	$DEBUG && iptables -$ACT_INSERT FORWARD $rulenum -i $WIFIDEV -o $TUNDEV -s $DHCPWIFINET/$DHCPWIFIPRE -d ! $WIFINET/$WIFIPRE -j LOG --log-prefix "WIFIDHCP-TUN-FWOUT:"
	for mac_addr in $mac_addrs; do
		iptables -$ACT_INSERT FORWARD $rulenum -i $WIFIDEV -o $TUNDEV -s $DHCPWIFINET/$DHCPWIFIPRE -d ! $WIFINET/$WIFIPRE -m mac --mac-source $mac_addr -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
	done;
	iptables -$ACT_INSERT FORWARD $rulenum -i $WIFIDEV -o $TUNDEV -s $DHCPWIFINET/$DHCPWIFIPRE -d ! $WIFINET/$WIFIPRE -m state --state INVALID -j DROP

	# frames vom tunnel zum wifi/dhcp
	iptables -$ACT_INSERT FORWARD $rulenum -i $TUNDEV -o $WIFIDEV -s ! $DHCPWIFINET/$DHCPWIFIPRE -d $DHCPWIFINET/$DHCPWIFIPRE -j DROP
	$DEBUG && iptables -$ACT_INSERT FORWARD $rulenum -i $TUNDEV -o $WIFIDEV -s ! $DHCPWIFINET/$DHCPWIFIPRE -d $DHCPWIFINET/$DHCPWIFIPRE -j LOG --log-prefix "WIFIDHCP-TUN-FWIN:"
	iptables -$ACT_INSERT FORWARD $rulenum -i $TUNDEV -o $WIFIDEV -s ! $DHCPWIFINET/$DHCPWIFIPRE -d $DHCPWIFINET/$DHCPWIFIPRE -m state --state ESTABLISHED,RELATED -j ACCEPT
	iptables -$ACT_INSERT FORWARD $rulenum -i $TUNDEV -o $WIFIDEV -s ! $DHCPWIFINET/$DHCPWIFIPRE -d $DHCPWIFINET/$DHCPWIFIPRE -m state --state INVALID -j DROP

	# frames vom wifi/dhcp zu ppp
	iptables -$ACT_INSERT FORWARD $rulenum -i $WIFIDEV -o $PPPDEV -s $DHCPWIFINET/$DHCPWIFIPRE -d ! $WIFINET/$WIFIPRE -j DROP
	$DEBUG && iptables -$ACT_INSERT FORWARD $rulenum -i $WIFIDEV -o $PPPDEV -s $DHCPWIFINET/$DHCPWIFIPRE -d ! $WIFINET/$WIFIPRE -j LOG --log-prefix "WIFIDHCP-PPP-FWOUT:"
	for mac_addr in $mac_addrs; do
		iptables -$ACT_INSERT FORWARD $rulenum -i $WIFIDEV -o $PPPDEV -s $DHCPWIFINET/$DHCPWIFIPRE -d ! $WIFINET/$WIFIPRE -m mac --mac-source $mac_addr -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
	done;
	iptables -$ACT_INSERT FORWARD $rulenum -i $WIFIDEV -o $PPPDEV -s $DHCPWIFINET/$DHCPWIFIPRE -d ! $WIFINET/$WIFIPRE -m state --state INVALID -j DROP

	# frames vom ppp zum wifi/dhcp
	iptables -$ACT_INSERT FORWARD $rulenum -i $PPPDEV -o $WIFIDEV -s ! $DHCPWIFINET/$DHCPWIFIPRE -d $DHCPWIFINET/$DHCPWIFIPRE -j DROP
	$DEBUG && iptables -$ACT_INSERT FORWARD $rulenum -i $PPPDEV -o $WIFIDEV -s ! $DHCPWIFINET/$DHCPWIFIPRE -d $DHCPWIFINET/$DHCPWIFIPRE -j LOG --log-prefix "WIFIDHCP-PPP-FWIN:"
	iptables -$ACT_INSERT FORWARD $rulenum -i $PPPDEV -o $WIFIDEV -s ! $DHCPWIFINET/$DHCPWIFIPRE -d $DHCPWIFINET/$DHCPWIFIPRE -m state --state ESTABLISHED,RELATED -j ACCEPT
	iptables -$ACT_INSERT FORWARD $rulenum -i $PPPDEV -o $WIFIDEV -s ! $DHCPWIFINET/$DHCPWIFIPRE -d $DHCPWIFINET/$DHCPWIFIPRE -m state --state INVALID -j DROP
}

TUNDEV=tun+
PPPDEV=ppp+
eval $(/usr/bin/netparam)

case $1 in
        start)
        if [ -n "$(lsmod | grep ipt_mac)" ]; then
		echo "enabling access to tunnel/wan (if selected)"
		mac_access "create"
	else
		echo "localaccess disabled (iptables-extra not installed)"
	fi
        ;;
        stop)
        if [ -n "$(lsmod | grep ipt_mac)" ]; then
		echo "removing access to tunnel/wan"
		mac_access "remove"
	fi
        ;;
        restart)
                $0 stop
                $0 start
        ;;
        *)
                echo "Usage: $0 start|stop|restart"
        ;;
esac