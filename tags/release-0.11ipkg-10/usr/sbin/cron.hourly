#!/bin/sh

# Will run every hour (at 00:xx, 01:xx, ...)
# dependend on recent WIFI-IP-address
# see /var/spool/cron/crontabs/root for details

# check if there are more than 3 routes going to a single address,
# thus indicating that olsrd ist running.
# if not, tell cron.minutely to restart olsrd
if [ $(route -n | awk 'BEGIN { c=0 } /255.255.255.255/ { c++ } END {print c}') -le 3 ]; then echo "restart olsrd" > /tmp/restart_olsrd; fi

if [ "$(nvram get on_autoadapttxpwr )" = "on" ]; then
	if ( ! [ -f /tmp/adapt_txpwr.log ] || [ -f /tmp/adapt_txpwr.failed ] ) && ! [ -f /tmp/adapt_txpwr_running.log ]; then
		ff_txpwr=$(nvram get ff_txpwr)
		param="-p $ff_txpwr"
		adapt_txpower.sh $param >/tmp/adapt_txpwr_running.log
		if [ $? != 0 ]; then
			echo "failed" > /tmp/adapt_txpwr.failed
		else
			rm -rf /tmp/adapt_txpwr.failed
		fi
		mv /tmp/adapt_txpwr_running.log /tmp/adapt_txpwr.log
	fi
fi

if [ -n "$(nvram get on_remoteconf)" ]; then
	remote_addr=$(nvram get on_gw)
	if [ -z "$remote_addr" ]; then remote_addr=$(working_gateways.sh | cut -d' ' -f1); fi
	if [ -z "$remote_addr" ]; then exit; fi
	
	# get checksum
	wget -q -O /tmp/on_olsrd.conf.md5 http://$remote_addr/config/on_olsrd.conf.md5 2>/dev/null
	if [ $? = 0 ]; then
		
		if [ ! -f /etc/olsrd.conf_new ] ||
			[ $(awk '{ print $1 }' /tmp/on_olsrd.conf.md5) != $(md5sum /etc/olsrd.conf_new | awk '{ print $1 }') ]; then
			
			# get new config from gateway
			wget -q -O /tmp/on_olsrd.conf http://$remote_addr/config/on_olsrd.conf 2>/dev/null
			
			if [ $? = 0 ] &&
				[ $(awk '{ print $1 }' /tmp/on_olsrd.conf.md5) = $(md5sum /tmp/on_olsrd.conf | awk '{ print $1 }') ]; then
				
				logger "cron.hourly: found a new olsrd configuration"
				mv /tmp/on_olsrd.conf /etc/olsrd.conf_new
				
				# restarting olsrd is now done by cron-minutely
				echo "restart olsrd" > /tmp/restart_olsrd
			else
				logger "cron.hourly: problem downloading new olsrd config, i'll retry next hour"
			fi
		fi
	fi
	rm -rf /tmp/on_olsrd.conf
	rm -rf /tmp/on_olsrd.conf.md5
fi

# check if user-tunnel or ugw-tunel exists twice. if so, kill both and restart one.
for tun in user ugw; do
#	if [ $(ps | grep /var/run/openvpn.opennet_$tun.pid | grep -v grep | wc -l) -gt 1 ]; then
#	output of ps is dependent on the tty-size, so it might look good but it isn't
#	therefore the only way is to use /proc directly
#	greater than 3: one is the whole line, one is the grep and the other is the tunnel
	if [ $(grep /var/run/openvpn.opennet_$tun.pid /proc/*/cmdline 2>/dev/null | wc -l) -gt 3 ]; then
		logger "cron.hourly: there is more than one $tun-tunnel active. cleaning."
		/etc/init.d/S80openvpn stop opennet_$tun
		for pid in $(grep /var/run/openvpn.opennet_$tun.pid /proc/*/cmdline 2>/dev/null | cut -d'/' -f3); do
			kill $pid 2>/dev/null;
		done
		rm -f /var/run/openvpn.opennet_$tun.pid
		/etc/init.d/S80openvpn start opennet_$tun
	fi
done

# check if tunnel is not running but keys and gateway is defined (might happen on openvpn-server errors)
# lessorequal 2: one is the whole line, one is the grep and the tunnel is missing
if [ $(grep /var/run/openvpn.opennet_user.pid /proc/*/cmdline 2>/dev/null | wc -l) -le 2 ] && [ -f /etc/openvpn/opennet_user/on_aps.key ] && [ -f /etc/openvpn/opennet_user/on_aps.crt ] && [ -n "$(nvram get on_gw)" ]; then
	logger "cron.hourly: openvpn user-tunnel not running, try to (re)start"
	rm -f /var/run/openvpn.opennet_user.pid
	/etc/init.d/S80openvpn start opennet_user
fi
if [ $(grep /var/run/openvpn.opennet_ugw.pid /proc/*/cmdline 2>/dev/null | wc -l) -le 2 ] && [ -f /etc/openvpn/opennet_ugw/on_ugws.key ] && [ -f /etc/openvpn/opennet_ugw/on_ugws.crt ] && [ -n "$(nvram get on_ugw)" ] && [ "$(nvram get on_share_internet)" = "on" ]; then
	logger "cron.hourly: openvpn ugw-tunnel not running, try to (re)start"
	rm -f /var/run/openvpn.opennet_ugw.pid
	/etc/init.d/S80openvpn start opennet_ugw
fi