#!/bin/sh
# $Id: firstboot,v 1.4 2005/05/23 21:44:17 mbm Exp $

echo "initializing opennet-values"
ssid=$(nvram get wl0_ssid)
if [ -z $(nvram get wl0_on_init_override) ] ; then
	if [ -z "$ssid" ] || [ $ssid != "olsr.opennet-forum.de" ]; then
		echo "setting values"
		nvram set wl0_mode=sta
		nvram set wl0_infra=0
		nvram set wl0_channel=1
		nvram set wl0_ssid=olsr.opennet-forum.de
		nvram set wl0_wds=
		nvram set wl0_lazywds=0
		nvram set wl0_wep=on
		nvram set wl0_wep_bit=128
		nvram set wl0_key=1
		nvram set wl0_frag=512
		nvram set wl0_rts=250
		nvram set wl0_gmode_protection=auto
		# deactivate ff dyngw functionality
		nvram set ff_dyngw=0
	fi
fi

lan_ip=$(nvram get lan_ipaddr)
if [ $lan_ip = "192.168.1.1" ] || [ $lan_ip = "192.168.001.001" ] || [ $lan_ip = "192.168.2.1" ]; then
	nvram set lan_ipaddr=172.16.0.1
	nvram set lan_netmask=255.240.0.0
	nvram set lan_proto=static
fi

eval $(/usr/bin/netparam)
if [ -z $(nvram get wifi_ifname) ]; then
	nvram set wifi_ipaddr=192.168.33.127
	nvram set wifi_netmask=255.255.0.0
	nvram set wifi_proto=static
	nvram set wifi_ifname=$WIFIDEV
fi

# wifi_dns is now set in /etc/init.d/S20ongateway
#if [ -z $(nvram get wifi_dns) ]; then
#	nvram set wifi_dns=192.168.0.254
#fi

if [ -z $(nvram get wl0_ifname) ]; then
        nvram set wl0_ifname=$WIFIDEV
fi

# remove wifi device from list of bridged devices
ifnames=
for if in $(nvram get lan_ifnames); do
	if [ "$if" != $WIFIDEV ]; then
		ifnames="$ifnames $if"
	fi
done
ifnames=$(echo $ifnames)
nvram set lan_ifnames="$ifnames"

# especially on asus dhcp_start is by default not set to an integer value, so fix this
nvram set dhcp_start=100
nvram set dhcp_num=50


# activate automatic olsrd configuration
nvram set on_remoteconf="on"

# limit txpwr, assume always a external Antenna
on_ant_dbi=$(nvram get on_ant_dbi)
ff_txpwr=$(nvram get ff_txpwr)
if [ -z "$on_ant_dbi" ] || [ $on_ant_dbi -lt 8 ]; then
	nvram set on_ant_dbi=8
fi
if [ -z "$ff_txpwr" ] || [ $ff_txpwr -gt 15 ]; then
	nvram set ff_txpwr=15
fi

nvram commit

echo "initializing opennet-values done"

mount | grep squashfs >&- || {
	echo "You do not have a squashfs partition; aborting"
	echo "(firstboot cannot be run on jffs2 based firmwares)"
	return
}

[ -f "/tmp/.firstboot" ] && {
	echo "firstboot is already running"
	return
}
touch /tmp/.firstboot

jdev=$(mount | awk '/jffs2/ {print $3}')

if [ -z "$jdev" ]; then
	echo -n "Creating jffs2 partition... "
	mtd erase OpenWrt >&- 
	mount -t jffs2 /dev/mtdblock/4 /jffs
	echo "done"
	cd /jffs
else
	echo "firstboot has already been run"
	echo "jffs2 partition is mounted, only resetting files"
	cd $jdev
fi

exec 2>/dev/null

mount /dev/mtdblock/2 /rom -o ro

echo -n "creating directories... "
{
	cd /rom
	find . -type d
	cd -
} | xargs mkdir
echo "done"

echo -n "setting up symlinks... "
for file in $(cd /rom; find *  -type f; find *  -type l;)
do {
  [ "${file%/*}" = "usr/lib/ipkg/info" ] && {
    cp -f /rom/$file $file
  } || {
    ln -sf /rom/$file $file
  }
} done
echo "done"

echo "replacing opennet-Website"
	rm -f www/index.html
	ln -sf /rom/www/index_squashfs.html www/index.html
echo "done"

for link in etc/passwd etc/group etc/shells; do
	test -e $link && rm $link
done
echo "root:*:0:">etc/group
echo "/bin/ash">etc/shells

tar cC /rom usr/lib/ipkg|tar x

export ff_pw="$(/rom/usr/sbin/nvram get ff_pw)"
test -n "$ff_pw" || export ff_pw=admin
if [ -n "${ff_pw##\$1\$*}" ]; then
	# Clear pw. The passwd cmd has /etc/passwd hard wired...
	mkdir /tmp/setpass
	mkdir /tmp/setpass/bin
	mkdir /tmp/setpass/etc
	cp -a /rom/lib /tmp/setpass
	echo "root::0:0:root:/tmp:/bin/ash">/tmp/setpass/etc/passwd
	cp /rom/bin/busybox /tmp/setpass/bin
	ln -s busybox /tmp/setpass/bin/sh
	ln -s busybox /tmp/setpass/bin/echo
	ln -s busybox /tmp/setpass/bin/sleep
	ln -s busybox /tmp/setpass/bin/passwd
	/rom/usr/sbin/chroot /tmp/setpass sh -c 'sh -c "echo \"$ff_pw\";sleep 1;echo \"$ff_pw\""|passwd'
	cp /tmp/setpass/etc/passwd etc/passwd
	rm -r /tmp/setpass
else
	echo "root:$ff_pw:0:0:root:/tmp:/bin/ash">etc/passwd
fi
export ff_pw=
echo "done"

touch /tmp/resolv.conf
ln -s /tmp/resolv.conf /etc/resolv.conf

umount /rom
mount none /jffs/proc -t proc
pivot_root /jffs /jffs/rom
mount none /dev  -t devfs
mount none /tmp  -t ramfs
umount /rom/proc
umount /rom/tmp
umount /rom/dev
